{"version":3,"sources":["../../src/messages/filter-duplicated-process.js"],"names":["filterDuplicatedMessages","isEqualMessage","aMessage","bMessage","index","severity","message","messages","filter","restMessages","slice","some","restMessage"],"mappings":"AAAA;AACA;AACA;;;;;;;;kBAcwBA,wB;AAVxB,IAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,QAAD,EAAWC,QAAX,EAAwB;AAC3C,WAAOD,SAASE,KAAT,KAAmBD,SAASC,KAA5B,IACHF,SAASG,QAAT,KAAsBF,SAASE,QAD5B,IAEHH,SAASI,OAAT,KAAqBH,SAASG,OAFlC;AAGH,CAJD;AAKA;;;;;AAKe,SAASN,wBAAT,GAAiD;AAAA,QAAfO,QAAe,uEAAJ,EAAI;;AAC5D,WAAOA,SAASC,MAAT,CAAgB,UAACF,OAAD,EAAUF,KAAV,EAAoB;AACvC,YAAMK,eAAeF,SAASG,KAAT,CAAeN,QAAQ,CAAvB,CAArB;AACA,eAAO,CAACK,aAAaE,IAAb,CAAkB,uBAAe;AACrC,mBAAOV,eAAeK,OAAf,EAAwBM,WAAxB,CAAP;AACH,SAFO,CAAR;AAGH,KALM,CAAP;AAMH","file":"filter-duplicated-process.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/**\n * @param {TextLintMessage} aMessage\n * @param {TextLintMessage} bMessage\n */\nconst isEqualMessage = (aMessage, bMessage) => {\n    return aMessage.index === bMessage.index &&\n        aMessage.severity === bMessage.severity &&\n        aMessage.message === bMessage.message;\n};\n/**\n * filter duplicated messages\n * @param {TextLintMessage[]} messages\n * @returns {TextLintMessage[]} filtered messages\n */\nexport default function filterDuplicatedMessages(messages = []) {\n    return messages.filter((message, index) => {\n        const restMessages = messages.slice(index + 1);\n        return !restMessages.some(restMessage => {\n            return isEqualMessage(message, restMessage);\n        });\n    });\n}\n"]}