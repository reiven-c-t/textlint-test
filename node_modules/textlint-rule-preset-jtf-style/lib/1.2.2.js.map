{"version":3,"sources":["../src/1.2.2.js"],"names":["replaceSymbol","report","context","Syntax","RuleError","fixer","getSource","Str","node","text","test","index","search","symbol","fix","replaceTextRange","linter"],"mappings":"AAAA;AACA;;;;;;AACA;;;;AACA;;;;;;AAMA;AACA,IAAMA,gBAAgB;AAClB,SAAK,GADa;AAElB,SAAK;AAFa,CAAtB;AAIA,SAASC,MAAT,CAAgBC,OAAhB,EAAyB;AAAA,QAChBC,MADgB,GAC+BD,OAD/B,CAChBC,MADgB;AAAA,QACRC,SADQ,GAC+BF,OAD/B,CACRE,SADQ;AAAA,QACGC,KADH,GAC+BH,OAD/B,CACGG,KADH;AAAA,QACUJ,MADV,GAC+BC,OAD/B,CACUD,MADV;AAAA,QACkBK,SADlB,GAC+BJ,OAD/B,CACkBI,SADlB;;AAErB,+BACKH,OAAOI,GADZ,YACiBC,IADjB,EACsB;AACd,YAAI,CAAC,iCAAkBA,IAAlB,EAAwBN,OAAxB,CAAL,EAAuC;AACnC;AACH;AACD,YAAIO,OAAOH,UAAUE,IAAV,CAAX;AACA;AACA,YAAI,OAAOE,IAAP,CAAYD,IAAZ,CAAJ,EAAuB;AACnB,gBAAME,QAAQF,KAAKG,MAAL,CAAY,MAAZ,CAAd;AACA,gBAAMC,SAASb,cAAcS,KAAKE,KAAL,CAAd,CAAf;AACAV,mBAAOO,IAAP,EAAa,IAAIJ,SAAJ,CAAc,qBAAd,EAAqC;AAC9CO,uBAAOA,KADuC;AAE9CG,qBAAKT,MAAMU,gBAAN,CAAuB,CAACJ,KAAD,EAAQA,QAAQ,CAAhB,CAAvB,EAA2CE,MAA3C;AAFyC,aAArC,CAAb;AAIH;AACJ,KAfL;AAiBH;kBACc;AACXG,YAAQf,MADG;AAEXI,WAAOJ;AAFI,C","file":"1.2.2.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport {isUserWrittenNode} from \"./util/node-util\";\n/*\n1.2.2. ピリオド(.)とカンマ(,)\n欧文で表記する組織名などの固有名詞や数字にピリオド(.)やカンマ(,)が含まれる場合は、和文中でもピリオド(.)とカンマ(,)を使用します。\nいずれの場合も半角で表記します。「4.1.3 ピリオド(.)、カンマ(,)」を参照してく ださい。\n */\n\n// . => 。 の置換マップ\nconst replaceSymbol = {\n    \"．\": \".\",\n    \"，\": \",\"\n};\nfunction report(context) {\n    let {Syntax, RuleError, fixer, report, getSource} = context;\n    return {\n        [Syntax.Str](node){\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            let text = getSource(node);\n            // 1.2.2. ピリオド(.)とカンマ(,)\n            if (/[．，]/.test(text)) {\n                const index = text.search(/[．，]/);\n                const symbol = replaceSymbol[text[index]];\n                report(node, new RuleError(\"全角のピリオドとカンマは使用しません。\", {\n                    index: index,\n                    fix: fixer.replaceTextRange([index, index + 1], symbol)\n                }));\n            }\n        }\n    }\n}\nexport default {\n    linter: report,\n    fixer: report\n}"]}