{"version":3,"sources":["../../src/core/rule-creator-helper.js"],"names":["hasLinter","getLinter","hasFixer","getFixer","isRuleModule","assertRuleShape","getFilter","ruleCreator","linter","Error","fixer","ruleModule","key","undefined"],"mappings":"AAAA;AACA;;AAEA;;;;;;;;;QAKgBA,S,GAAAA,S;QAeAC,S,GAAAA,S;QAeAC,Q,GAAAA,Q;QAWAC,Q,GAAAA,Q;QAgBAC,Y,GAAAA,Y;QAWAC,e,GAAAA,e;QA0BAC,S,GAAAA,S;AA9FT,SAASN,SAAT,CAAmBO,WAAnB,EAAgC;AACnC,QAAI,OAAOA,YAAYC,MAAnB,KAA8B,UAAlC,EAA8C;AAC1C,eAAO,IAAP;AACH;AACD,QAAI,OAAOD,WAAP,KAAuB,UAA3B,EAAuC;AACnC,eAAO,IAAP;AACH;AACJ;AACD;;;;;;;AAOO,SAASN,SAAT,CAAmBM,WAAnB,EAAgC;AACnC,QAAI,OAAOA,YAAYC,MAAnB,KAA8B,UAAlC,EAA8C;AAC1C,eAAOD,YAAYC,MAAnB;AACH;AACD,QAAI,OAAOD,WAAP,KAAuB,UAA3B,EAAuC;AACnC,eAAOA,WAAP;AACH;AACD,UAAM,IAAIE,KAAJ,CAAU,8CAAV,CAAN;AACH;;AAED;;;;;AAKO,SAASP,QAAT,CAAkBK,WAAlB,EAA+B;AAClC,WAAO,OAAOA,YAAYG,KAAnB,KAA6B,UAA7B,IAA2CV,UAAUO,WAAV,CAAlD;AAEH;AACD;;;;;;;AAOO,SAASJ,QAAT,CAAkBI,WAAlB,EAA+B;AAClC,QAAI,CAACP,UAAUO,WAAV,CAAL,EAA6B;AACzB,cAAM,IAAIE,KAAJ,CAAU,gDAAV,CAAN;AACH;;AAED,QAAIP,SAASK,WAAT,CAAJ,EAA2B;AACvB,eAAOA,YAAYG,KAAnB;AACH;AACD,UAAM,IAAID,KAAJ,CAAU,6CAAV,CAAN;AACH;;AAED;;;;;AAKO,SAASL,YAAT,CAAsBG,WAAtB,EAAmC;AACtC,WAAOP,UAAUO,WAAV,KAA0BL,SAASK,WAAT,CAAjC;AACH;;AAED;;;;;;;AAOO,SAASF,eAAT,CAAyBM,UAAzB,EAA+C;AAAA,QAAVC,GAAU,uEAAJ,EAAI;;AAClD,QAAID,eAAeE,SAAnB,EAA8B;AAC1B,cAAM,IAAIJ,KAAJ,0BAAkCG,GAAlC,sBAAN;AACH;AACD;;;;;AAMA,QAAI,CAACR,aAAaO,UAAb,CAAL,EAA+B;AAC3B,cAAM,IAAIF,KAAJ,0BAAkCG,GAAlC,qHAAN;AAKH;AACJ;;AAED;;;;;;;AAOO,SAASN,SAAT,CAAmBC,WAAnB,EAAgC;AACnC,QAAI,OAAOA,WAAP,KAAuB,UAA3B,EAAuC;AACnC,eAAOA,WAAP;AACH;AACD,UAAM,IAAIE,KAAJ,CAAU,8CAAV,CAAN;AACH","file":"rule-creator-helper.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n\n/**\n * detect that ruleCreator has linter function\n * @param {*} ruleCreator\n * @returns {boolean}\n */\nexport function hasLinter(ruleCreator) {\n    if (typeof ruleCreator.linter === \"function\") {\n        return true;\n    }\n    if (typeof ruleCreator === \"function\") {\n        return true;\n    }\n}\n/**\n * get linter function from ruleCreator\n * if not found, throw error\n * @param {Function|Object} ruleCreator\n * @returns {Function} linter function\n * @throws\n */\nexport function getLinter(ruleCreator) {\n    if (typeof ruleCreator.linter === \"function\") {\n        return ruleCreator.linter;\n    }\n    if (typeof ruleCreator === \"function\") {\n        return ruleCreator;\n    }\n    throw new Error(\"Not found linter function in the ruleCreator\");\n}\n\n/**\n * detect that ruleCreator has fixer function\n * @param {*} ruleCreator\n * @returns {boolean}\n */\nexport function hasFixer(ruleCreator) {\n    return typeof ruleCreator.fixer === \"function\" && hasLinter(ruleCreator);\n\n}\n/**\n * get fixer function from ruleCreator\n * if not found, throw error\n * @param {Function|Object} ruleCreator\n * @returns {Function} fixer function\n * @throws\n */\nexport function getFixer(ruleCreator) {\n    if (!hasLinter(ruleCreator)) {\n        throw new Error(\"fixer module should have also linter function.\");\n    }\n\n    if (hasFixer(ruleCreator)) {\n        return ruleCreator.fixer;\n    }\n    throw new Error(\"Not found fixer function in the ruleCreator\");\n}\n\n/**\n * RuleModule should has either linter or fixer.\n * @param ruleCreator\n * @returns {boolean}\n **/\nexport function isRuleModule(ruleCreator) {\n    return hasLinter(ruleCreator) || hasFixer(ruleCreator);\n}\n\n/**\n * Validate rule module.\n * if invalid throw error\n * @param {*} ruleModule\n * @param {string} key\n * @throws\n */\nexport function assertRuleShape(ruleModule, key = \"\") {\n    if (ruleModule === undefined) {\n        throw new Error(`Definition of rule '${ key }' was not found.`);\n    }\n    /*\n    Check old rule function\n    module.exports = function(context){\n\n    }\n    */\n    if (!isRuleModule(ruleModule)) {\n        throw new Error(`Definition of rule '${ key }' was not rule module.\nRule should export function:\nmodule.exports = function(context){\n    // Your rule\n};`);\n    }\n}\n\n/**\n * get linter function from ruleCreator\n * if not found, throw error\n * @param {*} ruleCreator\n * @returns {Function} linter function\n * @throws\n */\nexport function getFilter(ruleCreator) {\n    if (typeof ruleCreator === \"function\") {\n        return ruleCreator;\n    }\n    throw new Error(\"Not found filter function in the ruleCreator\");\n}\n"]}