{"version":3,"sources":["../src/MarkdownProcessor.js"],"names":["MarkdownProcessor","config","ext","preProcess","text","filePath","postProcess","messages"],"mappings":"AAAA;AACA;AACA;;;;;;;;;AACA;;;;IACaA,iB,WAAAA,iB;AACT,+BAAYC,MAAZ,EAAoB;AAAA;;AAChB,aAAKA,MAAL,GAAcA,MAAd;AACH;;;;kCAeSC,G,EAAK;AACX,mBAAO;AACHC,0BADG,sBACQC,IADR,EACcC,QADd,EACwB;AACvB,2BAAO,0BAAMD,IAAN,CAAP;AACH,iBAHE;AAIHE,2BAJG,uBAISC,QAJT,EAImBF,QAJnB,EAI6B;AAC5B,2BAAO;AACHE,0CADG;AAEHF,kCAAUA,WAAWA,QAAX,GAAsB;AAF7B,qBAAP;AAIH;AATE,aAAP;AAWH;;;8CAzB4B;AACzB,mBAAO,CACH,KADG,EAEH,WAFG,EAGH,QAHG,EAIH,OAJG,EAKH,MALG,EAMH,OANG,EAOH,SAPG,EAQH,MARG,CAAP;AAUH","file":"MarkdownProcessor.js","sourcesContent":["/* eslint-disable no-unused-vars */\n// LICENSE : MIT\n\"use strict\";\nimport {parse} from \"markdown-to-ast\";\nexport class MarkdownProcessor {\n    constructor(config) {\n        this.config = config;\n    }\n\n    static availableExtensions() {\n        return [\n            \".md\",\n            \".markdown\",\n            \".mdown\",\n            \".mkdn\",\n            \".mkd\",\n            \".mdwn\",\n            \".mkdown\",\n            \".ron\"\n        ];\n    }\n\n    processor(ext) {\n        return {\n            preProcess(text, filePath) {\n                return parse(text);\n            },\n            postProcess(messages, filePath) {\n                return {\n                    messages,\n                    filePath: filePath ? filePath : \"<markdown>\"\n                };\n            }\n        };\n    }\n}\n"]}