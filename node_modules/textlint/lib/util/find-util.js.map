{"version":3,"sources":["../../src/util/find-util.js"],"names":["pathsToGlobPatterns","findFiles","separateByAvailability","pathToGlob","require","glob","path","fs","shell","patterns","options","processPatterns","extensions","cwd","process","map","files","addFile","filePath","indexOf","push","forEach","file","resolve","pattern","test","realpathSync","sync","nodir","availableFiles","unAvailableFiles","extname"],"mappings":"AAAA;AACA;;;;;QAWgBA,mB,GAAAA,mB;QAaAC,S,GAAAA,S;QA8BAC,sB,GAAAA,sB;AArDhB,IAAMC,aAAaC,QAAQ,sBAAR,CAAnB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,IAAMG,KAAKH,QAAQ,IAAR,CAAX;AACA,IAAMI,QAAQJ,QAAQ,SAAR,CAAd;AACA;;;;;AAKO,SAASJ,mBAAT,CAA6BS,QAA7B,EAAqD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AACxD,QAAMC,kBAAkBR,WAAW;AAC/BS,oBAAYF,QAAQE,UAAR,IAAsB,EADH;AAE/BC,aAAKH,QAAQG,GAAR,IAAeC,QAAQD,GAAR;AAFW,KAAX,CAAxB;AAIA,WAAOJ,SAASM,GAAT,CAAaJ,eAAb,CAAP;AACH;AACD;;;;;;AAMO,SAASV,SAAT,CAAmBQ,QAAnB,EAA2C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAC9C,QAAMG,MAAMH,QAAQG,GAAR,IAAeC,QAAQD,GAAR,EAA3B;AACA,QAAMG,QAAQ,EAAd;AACA,QAAMC,UAAU,SAAVA,OAAU,CAACC,QAAD,EAAc;AAC1B,YAAIF,MAAMG,OAAN,CAAcD,QAAd,MAA4B,CAAC,CAAjC,EAAoC;AAChCF,kBAAMI,IAAN,CAAWF,QAAX;AACH;AACJ,KAJD;AAKAT,aAASY,OAAT,CAAiB,mBAAW;AACxB,YAAMC,OAAOhB,KAAKiB,OAAL,CAAaV,GAAb,EAAkBW,OAAlB,CAAb;AACA,YAAIhB,MAAMiB,IAAN,CAAW,IAAX,EAAiBH,IAAjB,CAAJ,EAA4B;AACxBL,oBAAQV,GAAGmB,YAAH,CAAgBJ,IAAhB,CAAR;AACH,SAFD,MAEO;AACHjB,iBAAKsB,IAAL,CAAUH,OAAV,EAAmB;AACfI,uBAAO;AADQ,aAAnB,EAEGP,OAFH,CAEW,oBAAY;AACnB;AACA;AACAJ,wBAAQX,KAAKiB,OAAL,CAAaL,QAAb,CAAR;AACH,aAND;AAOH;AACJ,KAbD;AAcA,WAAOF,KAAP;AACH;;AAED;;;;;AAKO,SAASd,sBAAT,CAAgCc,KAAhC,EAAqD;AAAA,QAAdN,OAAc,uEAAJ,EAAI;;AACxD,QAAME,aAAaF,QAAQE,UAAR,IAAsB,EAAzC;AACA,QAAMiB,iBAAiB,EAAvB;AACA,QAAMC,mBAAmB,EAAzB;AACAd,UAAMK,OAAN,CAAc,oBAAY;AACtB,YAAMU,UAAUzB,KAAKyB,OAAL,CAAab,QAAb,CAAhB;AACA,YAAIN,WAAWO,OAAX,CAAmBY,OAAnB,MAAgC,CAAC,CAArC,EAAwC;AACpCD,6BAAiBV,IAAjB,CAAsBF,QAAtB;AACH,SAFD,MAEO;AACHW,2BAAeT,IAAf,CAAoBF,QAApB;AACH;AACJ,KAPD;AAQA,WAAO;AACHW,sCADG;AAEHC;AAFG,KAAP;AAIH","file":"find-util.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst pathToGlob = require(\"path-to-glob-pattern\");\nconst glob = require(\"glob\");\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst shell = require(\"shelljs\");\n/**\n * filter files by config\n * @param {string[]} patterns glob patterns\n * @param {{extensions?: string[], cwd?: string }} options\n */\nexport function pathsToGlobPatterns(patterns, options = {}) {\n    const processPatterns = pathToGlob({\n        extensions: options.extensions || [],\n        cwd: options.cwd || process.cwd()\n    });\n    return patterns.map(processPatterns);\n}\n/**\n * found files by glob pattern\n * @param {string[]} patterns\n * @param {{cwd?: string }} options\n * @returns {string[]} file path list\n */\nexport function findFiles(patterns, options = {}) {\n    const cwd = options.cwd || process.cwd();\n    const files = [];\n    const addFile = (filePath) => {\n        if (files.indexOf(filePath) === -1) {\n            files.push(filePath);\n        }\n    };\n    patterns.forEach(pattern => {\n        const file = path.resolve(cwd, pattern);\n        if (shell.test(\"-f\", file)) {\n            addFile(fs.realpathSync(file));\n        } else {\n            glob.sync(pattern, {\n                nodir: true\n            }).forEach(filePath => {\n                // workaround for windows\n                // https://github.com/isaacs/node-glob/issues/74#issuecomment-31548810\n                addFile(path.resolve(filePath));\n            });\n        }\n    });\n    return files;\n}\n\n/**\n * @param {string[]} files\n * @param {{extensions: string[]}} options\n * @returns {{availableFiles: string[], unAvailableFiles: string[]}}\n */\nexport function separateByAvailability(files, options = {}) {\n    const extensions = options.extensions || [];\n    const availableFiles = [];\n    const unAvailableFiles = [];\n    files.forEach(filePath => {\n        const extname = path.extname(filePath);\n        if (extensions.indexOf(extname) === -1) {\n            unAvailableFiles.push(filePath);\n        } else {\n            availableFiles.push(filePath);\n        }\n    });\n    return {\n        availableFiles,\n        unAvailableFiles\n    };\n}\n"]}