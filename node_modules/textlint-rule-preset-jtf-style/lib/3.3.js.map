{"version":3,"sources":["../src/3.3.js"],"names":["brackets","leftBrackets","map","RegExp","bracket","rightBrackets","reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","forEach","pattern","index","match","fix","replaceTextRange","linter"],"mappings":"AAAA;AACA;AACA;;;;;;;;;AAIA;;AACA;;;;AAEA,IAAMA,WAAW,CACb,KADa,EACN,KADM,EACC,GADD,EACM,GADN,EACW,GADX,EACgB,GADhB,EACqB,GADrB,EAC0B,GAD1B,EAC+B,GAD/B,EACoC,GADpC,CAAjB;;AAIA,IAAMC,eAAeD,SAASE,GAAT,CAAa,mBAAW;AACzC,WAAO,IAAIC,MAAJ,CAAW,aAAaC,OAAxB,EAAiC,GAAjC,CAAP;AACH,CAFoB,CAArB;AAGA,IAAMC,gBAAgBL,SAASE,GAAT,CAAa,mBAAW;AAC1C,WAAO,IAAIC,MAAJ,CAAWC,UAAU,SAArB,EAAgC,GAAhC,CAAP;AACH,CAFqB,CAAtB;AAGA,SAASE,QAAT,CAAkBC,OAAlB,EAA2B;AAAA,QAClBC,MADkB,GAC6BD,OAD7B,CAClBC,MADkB;AAAA,QACVC,SADU,GAC6BF,OAD7B,CACVE,SADU;AAAA,QACCC,MADD,GAC6BH,OAD7B,CACCG,MADD;AAAA,QACSC,KADT,GAC6BJ,OAD7B,CACSI,KADT;AAAA,QACgBC,SADhB,GAC6BL,OAD7B,CACgBK,SADhB;;AAEvB,+BACKJ,OAAOK,GADZ,YACiBC,IADjB,EACsB;AACd,YAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH;AACD,YAAMQ,OAAOH,UAAUE,IAAV,CAAb;AACA;AACAb,qBAAae,OAAb,CAAqB,mBAAW;AAC5B,kDAAqBD,IAArB,EAA2BE,OAA3B,EAAoCD,OAApC,CAA4C,iBAAS;AAAA,oBAC1CE,KAD0C,GACjCC,KADiC,CAC1CD,KAD0C;;AAEjDR,uBAAOI,IAAP,EAAa,IAAIL,SAAJ,CAAc,yBAAd,EAAyC;AAClDS,2BAAOA,KAD2C;AAElDE,yBAAKT,MAAMU,gBAAN,CAAuB,CAACH,KAAD,EAAQA,QAAQ,CAAhB,CAAvB,EAA2C,EAA3C;AAF6C,iBAAzC,CAAb;AAIH,aAND;AAOH,SARD;AASA;AACAb,sBAAcW,OAAd,CAAsB,mBAAW;AAC7B,kDAAqBD,IAArB,EAA2BE,OAA3B,EAAoCD,OAApC,CAA4C,iBAAS;AAAA,oBAC1CE,KAD0C,GAC3BC,KAD2B,CAC1CD,KAD0C;AAAA,oBACnCH,IADmC,GAC3BI,KAD2B,CACnCJ,IADmC;;AAEjDL,uBAAOI,IAAP,EAAa,IAAIL,SAAJ,CAAc,yBAAd,EAAyC;AAClDS,2BAAOA,KAD2C;AAElDE,yBAAKT,MAAMU,gBAAN,CAAuB,CAACH,KAAD,EAAQA,QAAQ,CAAhB,CAAvB,EAA2C,EAA3C;AAF6C,iBAAzC,CAAb;AAIH,aAND;AAOH,SARD;AASH,KA1BL;AA4BH;kBACc;AACXI,YAAQhB,QADG;AAEXK,WAAOL;AAFI,C","file":"3.3.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n3.3. かっこ類と隣接する文字の間のスペースの有無\nかっこの外側、内側ともにスペースを入れません。\n */\nimport {isUserWrittenNode} from \"./util/node-util\";\nimport {matchCaptureGroupAll} from \"match-index\";\n\nconst brackets = [\n    \"\\\\[\", \"\\\\]\", \"（\", \"）\", \"［\", \"］\", \"「\", \"」\", \"『\", \"』\"\n];\n\nconst leftBrackets = brackets.map(bracket => {\n    return new RegExp(\"\\([ 　]\\)\" + bracket, \"g\");\n});\nconst rightBrackets = brackets.map(bracket => {\n    return new RegExp(bracket + \"\\([ 　])\", \"g\");\n});\nfunction reporter(context) {\n    let {Syntax, RuleError, report, fixer, getSource} = context;\n    return {\n        [Syntax.Str](node){\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            const text = getSource(node);\n            // 左にスペース\n            leftBrackets.forEach(pattern => {\n                matchCaptureGroupAll(text, pattern).forEach(match => {\n                    const {index} = match;\n                    report(node, new RuleError(\"かっこの外側、内側ともにスペースを入れません。\", {\n                        index: index,\n                        fix: fixer.replaceTextRange([index, index + 1], \"\")\n                    }));\n                });\n            });\n            // 右にスペース\n            rightBrackets.forEach(pattern => {\n                matchCaptureGroupAll(text, pattern).forEach(match => {\n                    const {index, text} = match;\n                    report(node, new RuleError(\"かっこの外側、内側ともにスペースを入れません。\", {\n                        index: index,\n                        fix: fixer.replaceTextRange([index, index + 1], \"\")\n                    }));\n                });\n            });\n        }\n    }\n}\nexport default {\n    linter: reporter,\n    fixer: reporter\n}"]}