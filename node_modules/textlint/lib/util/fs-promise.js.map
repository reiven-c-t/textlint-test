{"version":3,"sources":["../../src/util/fs-promise.js"],"names":["readFile","fs","require","Promise","filePath","resolve","reject","error","result"],"mappings":"AAAA;AACA;;;;;QAGgBA,Q,GAAAA,Q;AAFhB,IAAMC,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,UAAUD,QAAQ,UAAR,CAAhB;AACO,SAASF,QAAT,CAAkBI,QAAlB,EAA4B;AAC/B,WAAO,IAAID,OAAJ,CAAY,UAACE,OAAD,EAAUC,MAAV,EAAqB;AACpCL,WAAGD,QAAH,CAAYI,QAAZ,EAAsB,OAAtB,EAA+B,UAACG,KAAD,EAAQC,MAAR,EAAmB;AAC9C,gBAAGD,KAAH,EAAU;AACN,uBAAOD,OAAOC,KAAP,CAAP;AACH;AACDF,oBAAQG,MAAR;AACH,SALD;AAMH,KAPM,CAAP;AAQH","file":"fs-promise.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst fs = require(\"fs\");\nconst Promise = require(\"bluebird\");\nexport function readFile(filePath) {\n    return new Promise((resolve, reject) => {\n        fs.readFile(filePath, \"utf-8\", (error, result) => {\n            if(error) {\n                return reject(error);\n            }\n            resolve(result);\n        });\n    });\n}\n"]}