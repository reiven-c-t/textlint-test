{"version":3,"sources":["../../src/util/proccesor-helper.js"],"names":["getProcessorMatchExtension","processors","ext","matchProcessors","filter","processor","constructor","availableExtensions","name","extList","some","targetExt","length"],"mappings":"AAAA;AACA;;;;;QAQgBA,0B,GAAAA,0B;;AAPhB;;;;;;AACA;;;;;;AAMO,SAASA,0BAAT,CAAoCC,UAApC,EAAgDC,GAAhD,EAAqD;AACxD,QAAMC,kBAAkBF,WAAWG,MAAX,CAAkB,qBAAa;AACnD;AACA,8BAAO,OAAOC,UAAUC,WAAV,CAAsBC,mBAA7B,KAAqD,UAA5D,iBACiBF,UAAUC,WAAV,CAAsBE,IADvC;AAEA,YAAMC,UAAUJ,UAAUC,WAAV,CAAsBC,mBAAtB,EAAhB;AACA,eAAOE,QAAQC,IAAR,CAAa;AAAA,mBAAaC,cAAcT,GAAd,IAAsB,MAAMS,SAAP,KAAsBT,GAAxD;AAAA,SAAb,CAAP;AACH,KANuB,CAAxB;AAOA,QAAIC,gBAAgBS,MAApB,EAA4B;AACxB,eAAOT,gBAAgB,CAAhB,CAAP;AACH;AACD,WAAO,IAAP;AACH","file":"proccesor-helper.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport assert from \"assert\";\n/**\n * find processor with `ext`\n * @param {Processor[]} processors\n * @param {string} ext\n * @returns {Processor}\n */\nexport function getProcessorMatchExtension(processors, ext) {\n    const matchProcessors = processors.filter(processor => {\n        // static availableExtensions() method\n        assert(typeof processor.constructor.availableExtensions === \"function\",\n            `Processor(${processor.constructor.name} should have availableExtensions()`);\n        const extList = processor.constructor.availableExtensions();\n        return extList.some(targetExt => targetExt === ext || (\".\" + targetExt) === ext);\n    });\n    if (matchProcessors.length) {\n        return matchProcessors[0];\n    }\n    return null;\n}\n"]}