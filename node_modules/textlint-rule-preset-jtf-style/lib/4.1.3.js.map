{"version":3,"sources":["../src/4.1.3.js"],"names":["reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","matchReg","forEach","index","match","fix","replaceTextRange","linter"],"mappings":"AAAA;AACA;AACA;;;;;;;;;;;;AAOA;;AACA;;;;AAEA,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;AAAA,QAClBC,MADkB,GAC6BD,OAD7B,CAClBC,MADkB;AAAA,QACVC,SADU,GAC6BF,OAD7B,CACVE,SADU;AAAA,QACCC,MADD,GAC6BH,OAD7B,CACCG,MADD;AAAA,QACSC,KADT,GAC6BJ,OAD7B,CACSI,KADT;AAAA,QACgBC,SADhB,GAC6BL,OAD7B,CACgBK,SADhB;;AAEvB,+BACKJ,OAAOK,GADZ,YACiBC,IADjB,EACsB;AACd,YAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH;AACD,YAAIQ,OAAOH,UAAUE,IAAV,CAAX;AACA;AACA,YAAME,WAAW,4FAAjB;AACA,8CAAqBD,IAArB,EAA2BC,QAA3B,EAAqCC,OAArC,CAA6C,iBAAS;AAClD,gBAAMC,QAAQC,MAAMD,KAApB;AACAR,mBAAOI,IAAP,EAAa,IAAIL,SAAJ,CAAc,wBAAd,EAAwC;AACjDS,uBAAOA,KAD0C;AAEjDE,qBAAKT,MAAMU,gBAAN,CAAuB,CAACH,KAAD,EAAQA,QAAQ,CAAhB,CAAvB,EAA2C,GAA3C;AAF4C,aAAxC,CAAb;AAIH,SAND;AAOH,KAfL;AAiBH;kBACc;AACXI,YAAQhB,QADG;AAEXK,WAAOL;AAFI,C","file":"4.1.3.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n\n4.1.3. ピリオド(.)、カンマ(,)\nピリオド(.)とカンマ(,)は「半角」で表記します。\n桁区切りのカンマ(,)、小数点のピリオド(.)、箇条書きの数字に 付加するピリオド(.)としても使用します。\n和文の句読点としては使用しません。「1.2.2 ピリオド(.)とカンマ(,)」を 参照してください\n */\nimport {isUserWrittenNode} from \"./util/node-util\";\nimport {matchCaptureGroupAll} from \"match-index\";\n\nfunction reporter(context) {\n    let {Syntax, RuleError, report, fixer, getSource} = context;\n    return {\n        [Syntax.Str](node){\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            let text = getSource(node);\n            // 和文. はエラー\n            const matchReg = /(?:[\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD87F][\\uDC00-\\uDFFF]|[ぁ-んァ-ヶ])(\\.)/g;\n            matchCaptureGroupAll(text, matchReg).forEach(match => {\n                const index = match.index;\n                report(node, new RuleError(\"和文の句読点としてはピリオドを使用しません。\", {\n                    index: index,\n                    fix: fixer.replaceTextRange([index, index + 1], \"。\")\n                }));\n            });\n        }\n    };\n}\nexport default {\n    linter: reporter,\n    fixer: reporter\n}"]}