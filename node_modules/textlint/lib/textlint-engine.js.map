{"version":3,"sources":["../src/textlint-engine.js"],"names":["createFormatter","require","TextLintEngine","config","executor","onFile","textlintCore","executeOnFile","file","lintFile","onText","executeOnText","text","ext","lintText","onFormat","formatterConfig","formatterName"],"mappings":"AAAA;;;;;;AAEA;;;;;;;;AADA,IAAMA,kBAAkBC,QAAQ,oBAAR,CAAxB;;AAEA;;;;IAIqBC,c;AACjB;;;;;AAKA,wBAAYC,MAAZ,EAAoB;AAAA;;AAChB,QAAMC,WAAW;AACb;;;;AAIAC,gBAAQ,gBAACC,YAAD,EAAkB;AACtB;;;;;;AAMA,mBAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAChC,uBAAOF,aAAaG,QAAb,CAAsBD,IAAtB,CAAP;AACH,aAFD;AAGH,SAfY;AAgBb;;;;AAIAE,gBAAQ,gBAACJ,YAAD,EAAkB;AACtB;;;;;;;AAOA,mBAAO,SAASK,aAAT,CAAuBC,IAAvB,EAA6BC,GAA7B,EAAkC;AACrC,uBAAOP,aAAaQ,QAAb,CAAsBF,IAAtB,EAA4BC,GAA5B,CAAP;AACH,aAFD;AAGH,SA/BY;AAgCb;;;AAGAE,kBAAU,kBAACC,eAAD,EAAqB;AAC3B;AACA,gBAAI,CAACA,gBAAgBC,aAArB,EAAoC;AAChCD,gCAAgBC,aAAhB,GAAgC,SAAhC;AACH;AACD,mBAAOjB,gBAAgBgB,eAAhB,CAAP;AACH;AAzCY,KAAjB;AA2CA,WAAO,iCAAuBb,MAAvB,EAA+BC,QAA/B,CAAP;AACH,C;;kBAnDgBF,c","file":"textlint-engine.js","sourcesContent":["\"use strict\";\nconst createFormatter = require(\"textlint-formatter\");\nimport TextLintEngineCore from \"./engine/textlint-engine-core\";\n/**\n * TextLintEngine a adapter for TextLintEngineCore.\n * It aim to pull the whole look together. (TextLintEngine and TextFixEngine)\n */\nexport default class TextLintEngine {\n    /**\n     * TextLintEngine is a adaptor of TextLintEngineCore.\n     * @param {Config|Object} [config]\n     * @returns {TextLintEngineCore}\n     */\n    constructor(config) {\n        const executor = {\n            /**\n             * @param {TextLintCore} textlintCore\n             * @returns {function()}\n             */\n            onFile: (textlintCore) => {\n                /**\n                 * Executes the current configuration on an array of file and directory names.\n                 * TextLintEngine#executeOnFile\n                 * @param {String} file An array of file and directory names.\n                 * @returns {TextLintResult[]} The results for all files that were linted.\n                 */\n                return function executeOnFile(file) {\n                    return textlintCore.lintFile(file);\n                };\n            },\n            /**\n             * @param {TextLintCore} textlintCore\n             * @returns {function()}\n             */\n            onText: (textlintCore) => {\n                /**\n                 * lint text, and return TextLintResult[]\n                 * TextLintEngine#executeOnText\n                 * @param {string} text linting text content\n                 * @param {string} ext ext is a type for linting. default: \".txt\"\n                 * @returns {TextLintResult[]}\n                 */\n                return function executeOnText(text, ext) {\n                    return textlintCore.lintText(text, ext);\n                };\n            },\n            /**\n             * @param {TextLintFormatterOption} formatterConfig\n             */\n            onFormat: (formatterConfig) => {\n                // default formatter name: stylish\n                if (!formatterConfig.formatterName) {\n                    formatterConfig.formatterName = \"stylish\";\n                }\n                return createFormatter(formatterConfig);\n            }\n        };\n        return new TextLintEngineCore(config, executor);\n    }\n}\n"]}