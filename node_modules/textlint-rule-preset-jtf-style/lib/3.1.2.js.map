{"version":3,"sources":["../src/3.1.2.js"],"names":["rx","reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","matchReg","katakakana","forEach","input","match","captureGroups","test","index","captureGroup","fix","replaceTextRange","linter"],"mappings":"AAAA;AACA;;;;;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;;;AACA,IAAMA,KAAK,oBAAK,GAAL,CAAX;AACA;;;;;;AAMA,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AAAA,QAClBC,MADkB,GAC6BD,OAD7B,CAClBC,MADkB;AAAA,QACVC,SADU,GAC6BF,OAD7B,CACVE,SADU;AAAA,QACCC,MADD,GAC6BH,OAD7B,CACCG,MADD;AAAA,QACSC,KADT,GAC6BJ,OAD7B,CACSI,KADT;AAAA,QACgBC,SADhB,GAC6BL,OAD7B,CACgBK,SADhB;;AAEvB,+BACKJ,OAAOK,GADZ,YACiBC,IADjB,EACsB;AACd,YAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH;AACD,YAAMQ,OAAOH,UAAUE,IAAV,CAAb;AACA;AACA,YAAME,WAAWX,EAAX,iEAAN;AACA,YAAMY,aAAa,eAAnB;AACA,kCAASF,IAAT,EAAeC,QAAf,EAAyBE,OAAzB,CAAiC,iBAAS;AAAA,gBAC/BC,KAD+B,GACPC,KADO,CAC/BD,KAD+B;AAAA,gBACxBE,aADwB,GACPD,KADO,CACxBC,aADwB;AAEtC;;AACA,gBAAIJ,WAAWK,IAAX,CAAgBH,KAAhB,CAAJ,EAA4B;AACxB;AACH;AACDE,0BAAcH,OAAd,CAAsB,wBAAgB;AAClC,oBAAMK,QAAQC,aAAaD,KAA3B;AACAb,uBAAOI,IAAP,EAAa,IAAIL,SAAJ,CAAc,6BAAd,EAA6C;AACtDc,2BAAOA,KAD+C;AAEtDE,yBAAKd,MAAMe,gBAAN,CAAuB,CAACH,KAAD,EAAQA,QAAQ,CAAhB,CAAvB,EAA2C,EAA3C;AAFiD,iBAA7C,CAAb;AAIH,aAND;AAOH,SAbD;AAcH,KAvBL;AAyBH;kBACc;AACXI,YAAQrB,QADG;AAEXK,WAAOL;AAFI,C","file":"3.1.2.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport {isUserWrittenNode} from \"./util/node-util\";\nimport {matchAll} from \"match-index\";\nimport regx from 'regx';\nimport {japaneseRegExp} from \"./util/regexp\";\nconst rx = regx(\"g\");\n/*\n3.1.2. 全角文字どうし\n\n原則として、全角文字どうしの間にスペースを入れません。ただしカタカナ複合語の場合を除きます。\n「2.1.7 カタカナ複合語」を参照してください。\n */\nfunction reporter(context) {\n    let {Syntax, RuleError, report, fixer, getSource} = context;\n    return {\n        [Syntax.Str](node){\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            const text = getSource(node);\n            // 全角同士の間は半角スペースを入れない\n            const matchReg = rx`${japaneseRegExp}( )${japaneseRegExp}`;\n            const katakakana = /[ァ-ヶ]( )[ァ-ヶ]/;\n            matchAll(text, matchReg).forEach(match => {\n                const {input, captureGroups} = match;\n                // ただしカタカナ複合語の場合を除きます。\n                if (katakakana.test(input)) {\n                    return;\n                }\n                captureGroups.forEach(captureGroup => {\n                    const index = captureGroup.index;\n                    report(node, new RuleError(\"原則として、全角文字どうしの間にスペースを入れません。\", {\n                        index: index,\n                        fix: fixer.replaceTextRange([index, index + 1], \"\")\n                    }));\n                });\n            });\n        }\n    }\n}\nexport default {\n    linter: reporter,\n    fixer: reporter\n}"]}