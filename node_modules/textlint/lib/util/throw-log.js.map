{"version":3,"sources":["../../src/util/throw-log.js"],"names":["setRunningCLI","setRunningTest","setExperimental","nowExperimental","throwWithoutExperimental","throwIfTesting","isExperimental","process","argv","indexOf","isRunningFromCLI","isRunningFromTester","status","message","Error"],"mappings":"AAAA;AACA;;;;;QAIgBA,a,GAAAA,a;QAGAC,c,GAAAA,c;QAGAC,e,GAAAA,e;QAOAC,e,GAAAA,e;QAQAC,wB,GAAAA,wB;QASAC,c,GAAAA,c;AAjChB,IAAIC,iBAAiBC,QAAQC,IAAR,CAAaC,OAAb,CAAqB,gBAArB,MAA2C,CAAC,CAAjE;AACA,IAAIC,mBAAmB,KAAvB;AACA,IAAIC,sBAAsB,KAA1B;AACO,SAASX,aAAT,CAAuBY,MAAvB,EAA+B;AAClCF,uBAAmBE,MAAnB;AACH;AACM,SAASX,cAAT,CAAwBW,MAAxB,EAAgC;AACnCD,0BAAsBC,MAAtB;AACH;AACM,SAASV,eAAT,CAAyBU,MAAzB,EAAiC;AACpCN,qBAAiBM,MAAjB;AACH;AACD;;;;AAIO,SAAST,eAAT,GAA2B;AAC9B,WAAOG,cAAP;AACH;;AAED;;;;AAIO,SAASF,wBAAT,CAAkCS,OAAlC,EAA2C;AAC9C,QAAIH,oBAAoB,CAACJ,cAAzB,EAAyC;AACrC,cAAMQ,MAAMD,OAAN,CAAN;AACH;AACJ;AACD;;;;AAIO,SAASR,cAAT,CAAwBQ,OAAxB,EAAiC;AACpC,QAAIF,mBAAJ,EAAyB;AACrB,cAAMG,MAAMD,OAAN,CAAN;AACH;AACJ","file":"throw-log.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nlet isExperimental = process.argv.indexOf(\"--experimental\") !== -1;\nlet isRunningFromCLI = false;\nlet isRunningFromTester = false;\nexport function setRunningCLI(status) {\n    isRunningFromCLI = status;\n}\nexport function setRunningTest(status) {\n    isRunningFromTester = status;\n}\nexport function setExperimental(status) {\n    isExperimental = status;\n}\n/**\n * if now is experimental, return\n * @returns {boolean}\n */\nexport function nowExperimental() {\n    return isExperimental;\n}\n\n/**\n * if current is not experimental, throw error message.\n * @param message\n */\nexport function throwWithoutExperimental(message) {\n    if (isRunningFromCLI && !isExperimental) {\n        throw Error(message);\n    }\n}\n/**\n * if current is in testing, throw error message.\n * @param {string} message\n */\nexport function throwIfTesting(message) {\n    if (isRunningFromTester) {\n        throw Error(message);\n    }\n}\n"]}