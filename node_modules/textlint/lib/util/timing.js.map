{"version":3,"sources":["../../src/util/timing.js"],"names":["alignLeft","str","len","ch","Array","length","join","alignRight","enabled","Boolean","process","env","TIMING","HEADERS","ALIGN","display","data","total","rows","Object","keys","map","key","time","sort","a","b","slice","forEach","row","push","toFixed","unshift","widths","i","n","table","cell","index","splice","w","log","module","exports","create","fn","t","hrtime","apply","prototype","call","arguments","on"],"mappings":"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","file":"timing.js","sourcesContent":["/**\n * @fileoverview Tracks performance of individual rules.\n * @author Brandon Mills\n * @copyright 2014 Brandon Mills. All rights reserved.\n */\n\"use strict\";\nimport Logger from \"./logger\";\n\n/* istanbul ignore next */\n/**\n * Align the string to left\n * @param {string} str string to evaluate\n * @param {int} len length of the string\n * @param {string} ch delimiter character\n * @returns {string} modified string\n * @private\n */\nfunction alignLeft(str, len, ch) {\n    return str + new Array(len - str.length + 1).join(ch || \" \");\n}\n\n/* istanbul ignore next */\n/**\n * Align the string to right\n * @param {string} str string to evaluate\n * @param {int} len length of the string\n * @param {string} ch delimiter character\n * @returns {string} modified string\n * @private\n */\nfunction alignRight(str, len, ch) {\n    return new Array(len - str.length + 1).join(ch || \" \") + str;\n}\n\nconst enabled = Boolean(process.env.TIMING);\n\nconst HEADERS = [\"Rule\", \"Time (ms)\", \"Relative\"];\nconst ALIGN = [alignLeft, alignRight, alignRight];\n\n/* istanbul ignore next */\n/**\n * display the data\n * @param {object} data Data object to be displayed\n * @returns {string} modified string\n * @private\n */\nfunction display(data) {\n    let total = 0;\n    const rows = Object.keys(data)\n        .map(function (key) {\n            const time = data[key];\n            total += time;\n            return [key, time];\n        })\n        .sort(function (a, b) {\n            return b[1] - a[1];\n        })\n        .slice(0, 10);\n\n    rows.forEach(function (row) {\n        row.push((row[1] * 100 / total).toFixed(1) + \"%\");\n        row[1] = row[1].toFixed(3);\n    });\n\n    rows.unshift(HEADERS);\n\n    const widths = [];\n    rows.forEach(function (row) {\n        for (let i = 0; i < row.length; i++) {\n            const n = row[i].length;\n            if (!widths[i] || n > widths[i]) {\n                widths[i] = n;\n            }\n        }\n    });\n\n    const table = rows.map(function (row) {\n        return row.map(function (cell, index) {\n            return ALIGN[index](cell, widths[index]);\n        }).join(\" | \");\n    });\n    table.splice(1, 0, widths.map(function (w, index) {\n        if (index !== 0 && index !== widths.length - 1) {\n            w++;\n        }\n\n        return ALIGN[index](\":\", w + 1, \"-\");\n    }).join(\"|\"));\n\n    Logger.log(table.join(\"\\n\"));\n}\n\n/* istanbul ignore next */\nmodule.exports = (function () {\n\n    const data = Object.create(null);\n\n    /**\n     * Time the run\n     * @param {*} key key from the data object\n     * @param {Function} fn function to be called\n     * @returns {Function} function to be executed\n     * @private\n     */\n    function time(key, fn) {\n        if (typeof data[key] === \"undefined\") {\n            data[key] = 0;\n        }\n\n        return function () {\n            let t = process.hrtime();\n            fn.apply(null, Array.prototype.slice.call(arguments));\n            t = process.hrtime(t);\n            data[key] += t[0] * 1e3 + t[1] / 1e6;\n        };\n    }\n\n    if (enabled) {\n        process.on(\"exit\", function () {\n            display(data);\n        });\n    }\n\n    return {\n        time: time,\n        enabled: enabled\n    };\n\n}());\n\n"]}