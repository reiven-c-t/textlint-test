{"version":3,"sources":["../../src/engine/rule-loader.js"],"names":["loadFromDir","interopRequire","require","fs","path","rulesDir","extname","rulesDirAbsolutePath","join","__dirname","resolve","process","cwd","rules","Object","create","readdirSync","forEach","file","withoutExt","slice"],"mappings":"AAAA;;;;;QAWgBA,W,GAAAA,W;AAVhB,IAAMC,iBAAiBC,QAAQ,iBAAR,CAAvB;AACA,IAAMC,KAAKD,QAAQ,IAAR,CAAX;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;AACA;;;;;;;AAOO,SAASF,WAAT,CAAqBK,QAArB,EAAgD;AAAA,QAAjBC,OAAiB,uEAAP,KAAO;;AACnD,QAAIC,6BAAJ;AACA,QAAI,CAACF,QAAL,EAAe;AACXE,+BAAuBH,KAAKI,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAvB;AACH,KAFD,MAEO;AACHF,+BAAuBH,KAAKM,OAAL,CAAaC,QAAQC,GAAR,EAAb,EAA4BP,QAA5B,CAAvB;AACH;AACD,QAAMQ,QAAQC,OAAOC,MAAP,CAAc,IAAd,CAAd;AACAZ,OAAGa,WAAH,CAAeT,oBAAf,EAAqCU,OAArC,CAA6C,gBAAQ;AACjD,YAAIb,KAAKE,OAAL,CAAaY,IAAb,MAAuBZ,OAA3B,EAAoC;AAChC;AACH;AACD,YAAMa,aAAaD,KAAKE,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAnB;AACAP,cAAMM,UAAN,IAAoBlB,eAAeG,KAAKI,IAAL,CAAUD,oBAAV,EAAgCW,IAAhC,CAAf,CAApB;AACH,KAND;AAOA,WAAOL,KAAP;AACH","file":"rule-loader.js","sourcesContent":["\"use strict\";\nconst interopRequire = require(\"interop-require\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n/**\n * Load all rule modules from specified directory.\n * These are filtered by [extname]\n * @param {String} [rulesDir] Path to rules directory, may be relative. Defaults to `lib/rules`.\n * @param {String} [extname] extension name\n * @returns {Object} Loaded rule modules by rule ids (file names).\n */\nexport function loadFromDir(rulesDir, extname = \".js\") {\n    let rulesDirAbsolutePath;\n    if (!rulesDir) {\n        rulesDirAbsolutePath = path.join(__dirname, \"rules\");\n    } else {\n        rulesDirAbsolutePath = path.resolve(process.cwd(), rulesDir);\n    }\n    const rules = Object.create(null);\n    fs.readdirSync(rulesDirAbsolutePath).forEach(file => {\n        if (path.extname(file) !== extname) {\n            return;\n        }\n        const withoutExt = file.slice(0, -3);\n        rules[withoutExt] = interopRequire(path.join(rulesDirAbsolutePath, file));\n    });\n    return rules;\n}\n"]}