{"version":3,"sources":["../src/4.2.6.js"],"names":["context","Syntax","RuleError","report","getSource","Str","node","text","rightMatches","rx","leftMatches","matches","forEach","index","match"],"mappings":"AAAA;AACA;AACA;;;;;;;;;;;;;;kBAYe,UAAUA,OAAV,EAAmB;AAAA,QACzBC,MADyB,GACeD,OADf,CACzBC,MADyB;AAAA,QACjBC,SADiB,GACeF,OADf,CACjBE,SADiB;AAAA,QACNC,MADM,GACeH,OADf,CACNG,MADM;AAAA,QACEC,SADF,GACeJ,OADf,CACEI,SADF;;AAE9B,+BACKH,OAAOI,GADZ,YACiBC,IADjB,EACsB;AACd,YAAI,CAAC,iCAAkBA,IAAlB,EAAwBN,OAAxB,CAAL,EAAuC;AACnC;AACH;AACD,YAAIO,OAAOH,UAAUE,IAAV,CAAX;AACA;AACA;AACA,YAAME,eAAe,sCAAqBD,IAArB,EAA2BE,EAA3B,0CAArB;AACA;AACA,YAAMC,cAAc,sCAAqBH,IAArB,EAA2BE,EAA3B,2CAApB;AACA,YAAME,UAAU,4BAAaD,WAAb,EAA0BF,YAA1B,CAAhB;AACAG,gBAAQC,OAAR,CAAgB,iBAAS;AAAA,gBACdC,KADc,GACLC,KADK,CACdD,KADc;;AAErBV,mBAAOG,IAAP,EAAa,IAAIJ,SAAJ,kRACH;AACNW,uBAAOA;AADD,aADG,CAAb;AAIH,SAND;AAOH,KAnBL;AAqBH,C;;AA7BD;;AACA;;AACA;;;;AACA;;AACA;;;;;;;;;;AACA,IAAMJ,KAAK,oBAAK,GAAL,CAAX","file":"4.2.6.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n4.2.6.ハイフン(-)\n原則として和文ではハイフン(-)を使用しません。\n使用する場合は半角で表記します。原文でハイフンが使われている場合も、和文では使用しません。\n例外は、住所や電話番号の区切りに使う場合です。\n */\nimport {isUserWrittenNode} from \"./util/node-util\";\nimport {matchCaptureGroupAll} from \"match-index\";\nimport regx from 'regx';\nimport {japaneseRegExp} from \"./util/regexp\";\nimport mergeMatches from \"./util/merge-matches\";\nconst rx = regx(\"g\");\nexport default function (context) {\n    let {Syntax, RuleError, report, getSource} = context;\n    return {\n        [Syntax.Str](node){\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            let text = getSource(node);\n            // 和文ではハイフン(-)を使用しません\n            // right\n            const rightMatches = matchCaptureGroupAll(text, rx`${japaneseRegExp}(\\-)`);\n            // left\n            const leftMatches = matchCaptureGroupAll(text, rx`(\\-)${japaneseRegExp}`);\n            const matches = mergeMatches(leftMatches, rightMatches);\n            matches.forEach(match => {\n                const {index} = match;\n                report(node, new RuleError(`原則として和文ではハイフン(-)を使用しません。\n例外は、住所や電話番号の区切りに使う場合です。`, {\n                    index: index\n                }))\n            });\n        }\n    };\n}"]}