{"version":3,"sources":["../../src/engine/rule-map.js"],"names":["MapLike","require","RuleMap","keys","length","ruleKey","get","toJSON","has","ruleHandler","set","clear","object","forEach","value","key"],"mappings":"AAAA;AACA;;;;;;;;;;;;;;AACA,IAAMA,UAAUC,QAAQ,UAAR,CAAhB;AACA;;;;IAGqBC,O;;;;;;;;;;;;AACjB;;;;4CAIoB;AAChB,mBAAO,KAAKC,IAAL,GAAYC,MAAZ,GAAqB,CAA5B;AACH;;;0CAEiB;AACd,mBAAO,KAAKD,IAAL,EAAP;AACH;;;gCAEOE,O,EAAS;AACb,mBAAO,KAAKC,GAAL,CAASD,OAAT,CAAP;AACH;;AAED;;;;;;sCAGc;AACV,mBAAO,KAAKE,MAAL,EAAP;AACH;;;sCAEaF,O,EAAS;AACnB,mBAAO,KAAKG,GAAL,CAASH,OAAT,CAAP;AACH;;AAGD;;;;;;;mCAIWA,O,EAASI,W,EAAa;AAC7B,iBAAKC,GAAL,CAASL,OAAT,EAAkBI,WAAlB;AACH;;AAED;;;;;;qCAGa;AACT,iBAAKE,KAAL;AACH;;;iCAEQ;AACL,gBAAMC,SAAS,EAAf;AACA,iBAAKC,OAAL,CAAa,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACzBH,uBAAOG,GAAP,IAAcD,KAAd;AACH,aAFD;AAGA,mBAAOF,MAAP;AACH;;;;EAlDgCZ,O;;kBAAhBE,O","file":"rule-map.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst MapLike = require(\"map-like\");\n/**\n * @typedef {{key: Function}} RulesObject\n */\nexport default class RuleMap extends MapLike {\n    /**\n     * has rule at least one > 0\n     * @returns {boolean}\n     */\n    hasRuleAtLeastOne() {\n        return this.keys().length > 0;\n    }\n\n    getAllRuleNames() {\n        return this.keys();\n    }\n\n    getRule(ruleKey) {\n        return this.get(ruleKey);\n    }\n\n    /**\n     * @returns {RulesObject}\n     */\n    getAllRules() {\n        return this.toJSON();\n    }\n\n    isDefinedRule(ruleKey) {\n        return this.has(ruleKey);\n    }\n\n\n    /**\n     * @param {string} ruleKey\n     * @param ruleHandler\n     */\n    defineRule(ruleKey, ruleHandler) {\n        this.set(ruleKey, ruleHandler);\n    }\n\n    /**\n     * reset defined rules\n     */\n    resetRules() {\n        this.clear();\n    }\n\n    toJSON() {\n        const object = {};\n        this.forEach((value, key) => {\n            object[key] = value;\n        });\n        return object;\n    }\n}\n"]}