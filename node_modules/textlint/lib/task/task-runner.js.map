{"version":3,"sources":["../../src/task/task-runner.js"],"names":["TaskRunner","task","Promise","resolve","reject","messages","on","events","message","push","error","complete","removeAllListeners","start"],"mappings":"AAAA;AACA;;;;;;;;AACA;;;;;;;;IACqBA,U;;;;;;;;AACjB;;;;;gCAKeC,I,EAAM;AACjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAMC,WAAW,EAAjB;AACAJ,qBAAKK,EAAL,CAAQ,2BAASC,MAAT,CAAgBC,OAAxB,EAAiC,mBAAW;AACxCH,6BAASI,IAAT,CAAcD,OAAd;AACH,iBAFD;AAGAP,qBAAKK,EAAL,CAAQ,2BAASC,MAAT,CAAgBG,KAAxB,EAA+B,iBAAS;AACpCN,2BAAOM,KAAP;AACH,iBAFD;AAGAT,qBAAKK,EAAL,CAAQ,2BAASC,MAAT,CAAgBI,QAAxB,EAAkC,YAAM;AACpCV,yBAAKW,kBAAL;AACAT,4BAAQE,QAAR;AACH,iBAHD;AAIAJ,qBAAKY,KAAL;AACH,aAbM,CAAP;AAcH;;;;;;kBArBgBb,U","file":"task-runner.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport CoreTask from \"./textlint-core-task\";\nexport default class TaskRunner {\n    /**\n     * Task and return promise\n     * @param {TextLintCoreTask} task\n     * @returns {Promise}\n     */\n    static process(task) {\n        return new Promise((resolve, reject) => {\n            const messages = [];\n            task.on(CoreTask.events.message, message => {\n                messages.push(message);\n            });\n            task.on(CoreTask.events.error, error => {\n                reject(error);\n            });\n            task.on(CoreTask.events.complete, () => {\n                task.removeAllListeners();\n                resolve(messages);\n            });\n            task.start();\n        });\n    }\n}\n"]}