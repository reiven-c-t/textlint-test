{"version":3,"sources":["../../src/shared/check-mixed-message.js"],"names":["checkMixedMessage","messages","typed","Object","create","forEach","message","type","types","keys","length","Error","join"],"mappings":"AAAA;AACA;AACA;;;;;;;;;kBAKwBA,iB;AAAT,SAASA,iBAAT,CAA2BC,QAA3B,EAAqC;AAChD,QAAMC,QAAQC,OAAOC,MAAP,CAAc,IAAd,CAAd;AACAH,aAASI,OAAT,CAAiB,mBAAW;AACxBH,cAAMI,QAAQC,IAAd,IAAsBD,QAAQC,IAA9B;AACH,KAFD;AAGA,QAAMC,QAAQL,OAAOM,IAAP,CAAYP,KAAZ,CAAd;AACA,QAAIM,MAAME,MAAN,GAAe,CAAnB,EAAsB;AAClB,cAAM,IAAIC,KAAJ,iCAAwCH,MAAMI,IAAN,CAAW,IAAX,CAAxC,8HAAN;AAGH;AACD,WAAOX,QAAP;AACH","file":"check-mixed-message.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/**\n * Check mixed typed messages\n * @param {TextLintMessage[]} messages\n * @returns {TextLintMessage[]} messages\n */\nexport default function checkMixedMessage(messages) {\n    const typed = Object.create(null);\n    messages.forEach(message => {\n        typed[message.type] = message.type;\n    });\n    const types = Object.keys(typed);\n    if (types.length > 1) {\n        throw new Error(`Error mixed message types: ${types.join(\", \")}.\nA single rule does a single thing. Should not mixed types in a single rule.\nYou can separate this rule to two rules.`);\n    }\n    return messages;\n}\n"]}