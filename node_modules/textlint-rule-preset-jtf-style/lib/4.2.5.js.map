{"version":3,"sources":["../src/4.2.5.js"],"names":["reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","matchHanQuestion","forEach","index","match","fix","replaceTextRange","linter"],"mappings":"AAAA;AACA;AACA;;;;;;;;;AAIA;;AACA;;;;AAEA,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;AAAA,QAClBC,MADkB,GAC6BD,OAD7B,CAClBC,MADkB;AAAA,QACVC,SADU,GAC6BF,OAD7B,CACVE,SADU;AAAA,QACCC,MADD,GAC6BH,OAD7B,CACCG,MADD;AAAA,QACSC,KADT,GAC6BJ,OAD7B,CACSI,KADT;AAAA,QACgBC,SADhB,GAC6BL,OAD7B,CACgBK,SADhB;;AAEvB,+BACKJ,OAAOK,GADZ,YACiBC,IADjB,EACsB;AACd,YAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH;AACD,YAAMQ,OAAOH,UAAUE,IAAV,CAAb;AACA;AACA,YAAME,mBAAmB,UAAzB;AACA,8CAAqBD,IAArB,EAA2BC,gBAA3B,EAA6CC,OAA7C,CAAqD,iBAAS;AAAA,gBACnDC,KADmD,GAC1CC,KAD0C,CACnDD,KADmD;;AAE1DR,mBAAOI,IAAP,EAAa,IAAIL,SAAJ,CAAc,yBAAd,EAAyC;AAClDS,uBAAOA,KAD2C;AAElDE,qBAAKT,MAAMU,gBAAN,CAAuB,CAACH,KAAD,EAAQA,QAAQ,CAAhB,CAAvB,EAA2C,GAA3C;AAF6C,aAAzC,CAAb;AAIH,SAND;AAOH,KAfL;AAiBH;kBACc;AACXI,YAAQhB,QADG;AAEXK,WAAOL;AAFI,C","file":"4.2.5.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n4.2.5.波線(〜)\n数値の範囲を示す場合に使用します。\n */\nimport {isUserWrittenNode} from \"./util/node-util\";\nimport {matchCaptureGroupAll} from \"match-index\";\n\nfunction reporter(context) {\n    let {Syntax, RuleError, report, fixer, getSource} = context;\n    return {\n        [Syntax.Str](node){\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            const text = getSource(node);\n            // 数値の区切りに半角の~は利用しない\n            const matchHanQuestion = /\\d(~)\\d/g;\n            matchCaptureGroupAll(text, matchHanQuestion).forEach(match => {\n                const {index} = match;\n                report(node, new RuleError(\"数値の範囲を示す場合には全角の〜を使用します。\", {\n                    index: index,\n                    fix: fixer.replaceTextRange([index, index + 1], \"〜\")\n                }));\n            });\n        }\n    };\n}\nexport default {\n    linter: reporter,\n    fixer: reporter\n}"]}