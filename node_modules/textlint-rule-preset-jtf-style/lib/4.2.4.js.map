{"version":3,"sources":["../src/4.2.4.js"],"names":["rx","reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","matchHanNakaguro","forEach","index","match","fix","replaceTextRange","linter"],"mappings":"AAAA;AACA;AACA;;;;;;;;;;;;;;;AAQA;;AACA;;AACA;;;;AACA;;;;;;;;AACA,IAAMA,KAAK,oBAAK,GAAL,CAAX;AACA,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AAAA,QAClBC,MADkB,GAC6BD,OAD7B,CAClBC,MADkB;AAAA,QACVC,SADU,GAC6BF,OAD7B,CACVE,SADU;AAAA,QACCC,MADD,GAC6BH,OAD7B,CACCG,MADD;AAAA,QACSC,KADT,GAC6BJ,OAD7B,CACSI,KADT;AAAA,QACgBC,SADhB,GAC6BL,OAD7B,CACgBK,SADhB;;AAEvB,+BACKJ,OAAOK,GADZ,YACiBC,IADjB,EACsB;AACd,YAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH;AACD,YAAMQ,OAAOH,UAAUE,IAAV,CAAb;AACA;AACA,YAAME,mBAAmBX,EAAnB,iEAAN;AACA,8CAAqBU,IAArB,EAA2BC,gBAA3B,EAA6CC,OAA7C,CAAqD,iBAAS;AAAA,gBACnDC,KADmD,GAC1CC,KAD0C,CACnDD,KADmD;;AAE1DR,mBAAOI,IAAP,EAAa,IAAIL,SAAJ,CAAc,+CAAd,EAA+D;AACxES,uBAAOA,KADiE;AAExEE,qBAAKT,MAAMU,gBAAN,CAAuB,CAACH,KAAD,EAAQA,QAAQ,CAAhB,CAAvB,EAA2C,GAA3C;AAFmE,aAA/D,CAAb;AAIH,SAND;AAOH,KAfL;AAiBH;kBACc;AACXI,YAAQhB,QADG;AAEXK,WAAOL;AAFI,C","file":"4.2.4.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n4.2.4.中黒(・)\nカタカナ複合語を区切る場合、同格の語句を並列する場合に使用します。\n同一の文書で、カタカナ複合語の区切りに中黒を使い、同格の語句の並列にも中黒を使用するのは、お勧めしません。\n読み手の理解を妨げる場合があるからです。「2.1.7 カタカナ複合語」を参照してください\n\n「･」と「・」\n */\nimport {isUserWrittenNode} from \"./util/node-util\";\nimport {matchCaptureGroupAll} from \"match-index\";\nimport regx from 'regx';\nimport {japaneseRegExp} from \"./util/regexp\";\nconst rx = regx(\"g\");\nfunction reporter(context) {\n    let {Syntax, RuleError, report, fixer, getSource} = context;\n    return {\n        [Syntax.Str](node){\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            const text = getSource(node);\n            // 和文で半角の･は利用しない\n            const matchHanNakaguro = rx`(?:${japaneseRegExp}|[a-zA-Z])(･)(?:${japaneseRegExp}|[a-zA-Z])`;\n            matchCaptureGroupAll(text, matchHanNakaguro).forEach(match => {\n                const {index} = match;\n                report(node, new RuleError(\"カタカナ複合語を区切る場合または同格の語句を並列する場合には全角の中黒（・）を使用します。\", {\n                    index: index,\n                    fix: fixer.replaceTextRange([index, index + 1], \"・\")\n                }));\n            })\n        }\n    };\n}\nexport default {\n    linter: reporter,\n    fixer: reporter\n}"]}