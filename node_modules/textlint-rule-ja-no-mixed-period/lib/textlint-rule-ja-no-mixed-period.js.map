{"version":3,"sources":["../src/textlint-rule-ja-no-mixed-period.js"],"names":[],"mappings":";AACA;;;;;;AACA,IAAM,aAAa,QAAQ,sBAAR,EAAgC,UAAnD;AACA,IAAM,cAAc,QAAQ,aAAR,GAApB;AACA,IAAM,iBAAiB,0FAAvB;AACA,IAAM,sBAAsB,aAA5B;AACA,IAAM,oBAAoB,OAA1B;AACA,IAAM,iBAAiB;;AAEnB,gBAAY,GAFO;;AAInB,qBAAiB;AAJE,CAAvB;AAMA,IAAM,WAAW,SAAX,QAAW,CAAC,OAAD,EAA2B;AAAA,QAAjB,OAAiB,yDAAP,EAAO;AAAA,QACjC,MADiC,GACc,OADd,CACjC,MADiC;AAAA,QACzB,SADyB,GACc,OADd,CACzB,SADyB;AAAA,QACd,MADc,GACc,OADd,CACd,MADc;AAAA,QACN,KADM,GACc,OADd,CACN,KADM;AAAA,QACC,SADD,GACc,OADd,CACC,SADD;;AAExC,QAAM,SAAS,IAAI,UAAJ,CAAe,OAAf,CAAf;AACA,QAAM,aAAa,QAAQ,UAAR,IAAsB,eAAe,UAAxD;AACA,QAAM,kBAAkB,QAAQ,eAAR,KAA4B,SAA5B,GAAwC,QAAQ,eAAhD,GAAkE,eAAe,eAAzG;AACA,QAAM,mBAAmB,CAAC,OAAO,QAAR,EAAkB,OAAO,IAAzB,EAA+B,OAAO,IAAtC,EAA4C,OAAO,KAAnD,EAA0D,OAAO,UAAjE,EAA6E,OAAO,QAApF,CAAzB;AACA,+BACK,OAAO,SADZ,YACuB,IADvB,EAC4B;AACpB,YAAI,OAAO,WAAP,CAAmB,IAAnB,EAAyB,gBAAzB,CAAJ,EAAgD;AAC5C;AACH;AACD,YAAM,WAAW,KAAK,QAAL,CAAc,KAAK,QAAL,CAAc,MAAd,GAAuB,CAArC,CAAjB;AACA,YAAI,aAAa,SAAb,IAA0B,SAAS,IAAT,KAAkB,OAAO,GAAvD,EAA4D;AACxD;AACH;AACD,YAAM,cAAc,UAAU,QAAV,CAApB;;AAEA,YAAI,CAAC,eAAe,IAAf,CAAoB,WAApB,CAAL,EAAuC;AACnC;AACH;;AAED,YAAM,0CAAiB,WAAjB,EAAN;AACA,YAAM,YAAY,WAAW,MAAX,GAAoB,CAAtC;AACA,YAAM,WAAW,WAAW,SAAX,CAAjB;AACA,YAAI,aAAa,SAAjB,EAA4B;AACxB;AACH;;;AAGD,YAAI,KAAK,IAAL,CAAU,QAAV,CAAJ,EAAyB;AACrB,mBAAO,QAAP,EAAiB,IAAI,SAAJ,WAAqB,UAArB,mCAA8D;AAC3E,uBAAO;AADoE,aAA9D,CAAjB;AAGA;AACH;;;;;;AAMD,YAAI,oBAAoB,IAApB,CAAyB,QAAzB,CAAJ,EAAwC;AACpC;AACH;AACD,YAAI,mBAAmB,YAAY,IAAZ,CAAiB,QAAjB,CAAvB,EAAmD;AAC/C;AACH;AACD,YAAI,aAAa,UAAjB,EAA6B;AACzB;AACH;;;AAGD,YAAI,MAAM,IAAV;AACA,YAAI,kBAAkB,IAAlB,CAAuB,QAAvB,CAAJ,EAAsC;AAClC,kBAAM,MAAM,gBAAN,CAAuB,CAAC,SAAD,EAAY,YAAY,CAAxB,CAAvB,EAAmD,UAAnD,CAAN;AACH,SAFD,MAEO;AACH,kBAAM,MAAM,gBAAN,CAAuB,CAAC,YAAY,CAAb,EAAgB,YAAY,CAA5B,CAAvB,EAAuD,UAAvD,CAAN;AACH;AACD,eAAO,QAAP,EAAiB,IAAI,SAAJ,WAAqB,UAArB,mBAA8C;AAC3D,mBAAO,SADoD;AAE3D;AAF2D,SAA9C,CAAjB;AAKH,KAxDL;AA0DH,CAhED;;AAkEA,OAAO,OAAP,GAAiB;AACb,YAAQ,QADK;AAEb,WAAO;AAFM,CAAjB","file":"textlint-rule-ja-no-mixed-period.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst RuleHelper = require(\"textlint-rule-helper\").RuleHelper;\nconst emojiRegExp = require(\"emoji-regex\")();\nconst japaneseRegExp = /(?:[々〇〻\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD87F][\\uDC00-\\uDFFF]|[ぁ-んァ-ヶ])/;\nconst exceptionMarkRegExp = /[!?！？\\)）」』]/;\nconst defaultPeriodMark = /[。\\.]/;\nconst defaultOptions = {\n    // 優先する句点文字\n    periodMark: \"。\",\n    // 末尾に絵文字を置くことを許可するか\n    allowEmojiAtEnd: false\n};\nconst reporter = (context, options = {}) => {\n    const {Syntax, RuleError, report, fixer, getSource} = context;\n    const helper = new RuleHelper(context);\n    const periodMark = options.periodMark || defaultOptions.periodMark;\n    const allowEmojiAtEnd = options.allowEmojiAtEnd !== undefined ? options.allowEmojiAtEnd : defaultOptions.allowEmojiAtEnd;\n    const ignoredNodeTypes = [Syntax.ListItem, Syntax.Link, Syntax.Code, Syntax.Image, Syntax.BlockQuote, Syntax.Emphasis];\n    return {\n        [Syntax.Paragraph](node){\n            if (helper.isChildNode(node, ignoredNodeTypes)) {\n                return;\n            }\n            const lastNode = node.children[node.children.length - 1];\n            if (lastNode === undefined || lastNode.type !== Syntax.Str) {\n                return;\n            }\n            const lastStrText = getSource(lastNode);\n            // 日本語が含まれていない文章は無視する\n            if (!japaneseRegExp.test(lastStrText)) {\n                return;\n            }\n            // サロゲートペアを考慮した文字列長・文字アクセス\n            const characters = [...lastStrText];\n            const lastIndex = characters.length - 1;\n            const lastChar = characters[lastIndex];\n            if (lastChar === undefined) {\n                return;\n            }\n            // 文末がスペースである場合\n            // TODO: fixに対応したい\n            if (/\\s/.test(lastChar)) {\n                report(lastNode, new RuleError(`文末が\"${periodMark}\"で終わっていません。末尾に不要なスペースがあります。`, {\n                    index: lastIndex\n                }));\n                return\n            }\n            // 末尾の\"文字\"が句点以外で末尾に使われる文字であるときは無視する\n            // 例外: 感嘆符\n            // 例外: 「」 () （）『』\n            // http://ncode.syosetu.com/n8977bb/12/\n            // https://ja.wikipedia.org/wiki/%E7%B5%82%E6%AD%A2%E7%AC%A6\n            if (exceptionMarkRegExp.test(lastChar)) {\n                return;\n            }\n            if (allowEmojiAtEnd && emojiRegExp.test(lastChar)) {\n                return;\n            }\n            if (lastChar === periodMark) {\n                return;\n            }\n            // \".\" であるなら \"。\"に変換\n            // そうでない場合は末尾に\"。\"を追加する\n            let fix = null;\n            if (defaultPeriodMark.test(lastChar)) {\n                fix = fixer.replaceTextRange([lastIndex, lastIndex + 1], periodMark);\n            } else {\n                fix = fixer.replaceTextRange([lastIndex + 1, lastIndex + 1], periodMark);\n            }\n            report(lastNode, new RuleError(`文末が\"${periodMark}\"で終わっていません。`, {\n                index: lastIndex,\n                fix\n            }));\n\n        }\n    }\n};\n\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"]}