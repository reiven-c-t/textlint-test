{"version":3,"sources":["../../src/core/rule-error.js"],"names":["RuleError","message","paddingLocation","line","column","index","fix","JSON","stringify","module","exports"],"mappings":"AAAA;AACA;AACA;;;;;;;;;;;;;IAMMA,S;AACF;;;;;;;AAOA,qBAAYC,OAAZ,EAAqBC,eAArB,EAAsC;AAAA;;AAClC,SAAKD,OAAL,GAAeA,OAAf;AACA,QAAI,QAAOC,eAAP,yCAAOA,eAAP,OAA2B,QAA/B,EAAyC;AACrC;;;;AAIA,WAAKC,IAAL,GAAYD,gBAAgBC,IAA5B;AACA;;;;AAIA,WAAKC,MAAL,GAAcF,gBAAgBE,MAA9B;AACA;;;;AAIA,WAAKC,KAAL,GAAaH,gBAAgBG,KAA7B;AACA;;;;AAIA,WAAKC,GAAL,GAAWJ,gBAAgBI,GAA3B;AACH,KArBD,MAqBO,IAAI,OAAOJ,eAAP,KAA2B,QAA/B,EAAyC;AAC5C;AACA;AACA,WAAKE,MAAL,GAAcF,eAAd;AACH;AACJ;;;;+BAEU;AACP,aAAOK,KAAKC,SAAL,CAAe;AAClBL,cAAM,KAAKA,IADO;AAElBC,gBAAQ,KAAKA,MAFK;AAGlBC,eAAO,KAAKA,KAHM;AAIlBC,aAAK,KAAKA;AAJQ,OAAf,CAAP;AAMH;;;;;;AAELG,OAAOC,OAAP,GAAiBV,SAAjB","file":"rule-error.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/**\n * @typedef {Object} RuleError~Padding\n * @property {number} line\n * @property {number} column\n * @property {Object} fix\n */\nclass RuleError {\n    /**\n     * RuleError is like Error object.\n     * It's used for adding to TextLintResult.\n     * @param {string} message error message should start with lowercase letter\n     * @param {RuleError~Padding|number} [paddingLocation] - the object has padding {line, column} for actual error reason\n     * @constructor\n     */\n    constructor(message, paddingLocation) {\n        this.message = message;\n        if (typeof paddingLocation === \"object\") {\n            /**\n             * padding lineNumber\n             * @type {number}\n             */\n            this.line = paddingLocation.line;\n            /**\n             * padding column\n             * @type {number}\n             */\n            this.column = paddingLocation.column;\n            /**\n             * padding index\n             * @type {number}\n             */\n            this.index = paddingLocation.index;\n            /**\n             * fixCommand object\n             * @type {FixCommand}\n             */\n            this.fix = paddingLocation.fix;\n        } else if (typeof paddingLocation === \"number\") {\n            // this is deprecated\n            // should pass padding as object.\n            this.column = paddingLocation;\n        }\n    }\n\n    toString() {\n        return JSON.stringify({\n            line: this.line,\n            column: this.column,\n            index: this.index,\n            fix: this.fix\n        });\n    }\n}\nmodule.exports = RuleError;\n"]}